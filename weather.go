package main

import (
	"fmt"
	owm "github.com/briandowns/openweathermap"
	"log"
)

func weatherByPlace(place string) (*owm.CurrentWeatherData, error) {
	w, err := owm.NewCurrent("C", "ru", openweathermapToken)
	if err != nil {
		log.Fatalln(err)
	}

	err = w.CurrentByName(place)
	if err != nil {
		return nil, err
	}

	return w, nil
}

func balconyWeather() string {
	limassol, _ := weatherByPlace("–ª–∏–º–∞—Å–æ–ª")
	rustavi, _ := weatherByPlace("—Ä—É—Å—Ç–∞–≤–∏")
	krasnoyarsk, _ := weatherByPlace("–∫—Ä–∞—Å–Ω–æ—è—Ä—Å–∫")
	chzenchzou, _ := weatherByPlace("—á–∂—ç–Ω—á–∂–æ—É")

	return specialPlacesResponse(krasnoyarsk, chzenchzou, rustavi, limassol)
}

func specialPlacesResponse(weathers ...*owm.CurrentWeatherData) string {
	response := "–ø–æ–≥–æ–¥–∞ –≤ —Å–∞–º—ã—Ö –≤–∞–∂–Ω—ã—Ö –º–µ—Å—Ç–∞—Ö"

	for _, a := range weathers {
		response += emptyLine
		switch a.Name {
		case "–õ–∏–º–∞—Å–æ–ª":
			response += "üèù"
		case "–†—É—Å—Ç–∞–≤–∏":
			response += "‚õ∞"
		case "–ö—Ä–∞—Å–Ω–æ—è—Ä—Å–∫":
			response += "üè†"
		case "–ß–∂—ç–Ω—á–∂–æ—É":
			response += "üèô"
		}
		response += specialPlaceResponse(a)
	}

	return response
}

func oneCityResponse(w *owm.CurrentWeatherData) string {
	return fmt.Sprintf("–ü–æ–≥–æ–¥–∞ –≤ –≥–æ—Ä–æ–¥–µ %s: %.1f ¬∞C, %s, –≤–ª–∞–∂–Ω–æ—Å—Ç—å: %d%%",
		w.Name, w.Main.Temp, w.Weather[0].Description, w.Main.Humidity)
}

func specialPlaceResponse(w *owm.CurrentWeatherData) string {
	return fmt.Sprintf("–ë–∞–ª–∫–æ–Ω.%s: %.1f ¬∞C, %s, –≤–ª–∞–∂–Ω–æ—Å—Ç—å: %d%%",
		w.Name, w.Main.Temp, w.Weather[0].Description, w.Main.Humidity)
}

//todo —Å–¥–µ–ª–∞—Ç—å –ø—Ä–æ–≥–Ω–æ–∑ –Ω–∞ 5 –¥–Ω–µ–π
func forecastForDays() string {
	f, err := owm.NewForecast("5", "C", "ru", openweathermapToken)
	if err != nil {
		log.Fatalln(err)
	}

	err = f.DailyByName("place", 5)

	if err != nil {
		return errorMessageDefault
	}

	return ""
}
